spring.application.name=ApiGateway
server.port=8888

# MySQL connection
spring.datasource.url=jdbc:mariadb://localhost:3306/clinicanuevomilenio_db
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

# JPA/Hibernate settings
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Configuración de zona horaria
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

jwt.secret=clave_super_segura_de_mas_de_64_bytes_de_longitud_esto_es_necesario_para_HS512

# Ruta para el microservicio de Pabellones
spring.cloud.gateway.routes[0].id=pabellon-service
spring.cloud.gateway.routes[0].uri=http://localhost:8003
spring.cloud.gateway.routes[0].predicates=Path=/api/proxy/pabellones/**
spring.cloud.gateway.routes[0].filters[0].name=RewritePath
spring.cloud.gateway.routes[0].filters[0].args.regexp=/api/proxy/pabellones/(?<segment>.*)
spring.cloud.gateway.routes[0].filters[0].args.replacement=/api/pabellones/$\{segment}

spring.cloud.gateway.routes[0].predicates[0]=Path=/api/proxy/pabellones/**
# El filtro que se aplica para limpiar la URL antes de enviarla al microservicio
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=2

# --- RUTA PARA LAS IMÁGENES DE PABELLONES ---
# Define la segunda regla de enrutamiento (índice 1)
spring.cloud.gateway.routes[1].id=ruta_imagenes_pabellones
# El destino del tráfico es el mismo microservicio de pabellones
spring.cloud.gateway.routes[1].uri=http://localhost:8003
# La condición para las imágenes
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/proxy/imagenes/**
# El filtro es el mismo: quita /api/proxy para que la petición llegue como /imagenes/.. al FileController
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=2

logging.level.org.springframework.security=DEBUG
spring.cloud.gateway.routes[0].filters[0].args.replacement=/api/pabellones/$\{segment}
